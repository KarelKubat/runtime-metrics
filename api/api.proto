syntax = "proto3";

package api;

import "google/protobuf/timestamp.proto";

// Discovery of all the names
message EmptyRequest {
}
message AllNamesResponse {
  repeated string AverageNames = 1;
  repeated string AveragePerDurationNames = 2;
  repeated string CountNames = 3;
  repeated string CountPerDurationNames = 4;
  repeated string SumNames = 5;
  repeated string SumPerDurationNames = 6;
  // Next free: 7
}

// Requesting a metric by name
message NameRequest {
  string Name = 1;
  // Next free: 2
}

// Responding to an average
message AverageResponse {
  double Average = 1;
  int64 N = 2;
  // Next free: 3
}

// Responding to an average per duration
message AveragePerDurationResponse {
  double Average = 1;
  int64 N = 2;
  google.protobuf.Timestamp Until = 3;
  // Next free: 4
}

message CountResponse {
  int64 Count = 1;
  // Next free: 2
}

message CountPerDurationResponse {
  int64 Count = 1;
  google.protobuf.Timestamp Until = 2;
  // Next free: 3
}

message SumResponse {
  double Sum = 1;
  int64 N = 2;
  // Next free: 3
}

message SumPerDurationResponse {
  double Sum = 1;
  int64 N = 2;
  google.protobuf.Timestamp Until = 3;
  // Next free: 4
}

message NamedAverage {
  string Name = 1;
  double Value = 2;
  int64 N = 3;
  // Next free: 4
}

message NamedAveragePerDuration {
  string Name = 1;
  double Value = 2;
  int64 N = 3;
  google.protobuf.Timestamp Until = 4;
  // Next free: 5
}

message NamedCount {
  string Name = 1;
  int64 Value = 2;
  // Next free: 3
}

message NamedCountPerDuration {
  string Name = 1;
  int64 Value = 2;
  google.protobuf.Timestamp Until = 3;
  // Next free: 4
}

message NamedSum {
  string Name = 1;
  double Value = 2;
  int64 N = 3;
  // Next free: 4
}

message NamedSumPerDuration {
  string Name = 1;
  double Value = 2;
  int64 N = 3;
  google.protobuf.Timestamp Until = 4;
  // Next free: 5
}

message FullDumpResponse {
  repeated NamedAverage NamedAverages = 1;
  repeated NamedAveragePerDuration NamedAveragesPerDuration = 2;
  repeated NamedCount NamedCounts = 3;
  repeated NamedCountPerDuration NamedCountsPerDuration = 4;
  repeated NamedSum NamedSums = 5;
  repeated NamedSumPerDuration NamedSumsPerDuration = 6;
  // Next free: 7
}

service Reporter {
  rpc AllNames(EmptyRequest) returns (AllNamesResponse) {}

  rpc FullDump(EmptyRequest) returns (FullDumpResponse) {}

  rpc Average(NameRequest) returns (AverageResponse) {}
  rpc AveragePerDuration(NameRequest) returns (AveragePerDurationResponse) {}
  rpc Count(NameRequest) returns (CountResponse) {}
  rpc CountPerDuration(NameRequest) returns (CountPerDurationResponse) {}
  rpc Sum(NameRequest) returns (SumResponse) {}
  rpc SumPerDuration(NameRequest) returns (SumPerDurationResponse) {}
}
